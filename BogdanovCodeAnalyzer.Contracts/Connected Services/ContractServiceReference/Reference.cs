//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BogdanovCodeAnalyzer.Contracts.ContractServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ContractServiceReference.IServiceBaseContract")]
    public interface IServiceBaseContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBaseContract/Log", ReplyAction="http://tempuri.org/IServiceBaseContract/LogResponse")]
        bool Log(string message, string tag, string method, string file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBaseContract/Log", ReplyAction="http://tempuri.org/IServiceBaseContract/LogResponse")]
        System.Threading.Tasks.Task<bool> LogAsync(string message, string tag, string method, string file);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceBaseContractChannel : BogdanovCodeAnalyzer.Contracts.ContractServiceReference.IServiceBaseContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceBaseContractClient : System.ServiceModel.ClientBase<BogdanovCodeAnalyzer.Contracts.ContractServiceReference.IServiceBaseContract>, BogdanovCodeAnalyzer.Contracts.ContractServiceReference.IServiceBaseContract {
        
        public ServiceBaseContractClient() {
        }
        
        public ServiceBaseContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceBaseContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceBaseContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceBaseContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Log(string message, string tag, string method, string file) {
            return base.Channel.Log(message, tag, method, file);
        }
        
        public System.Threading.Tasks.Task<bool> LogAsync(string message, string tag, string method, string file) {
            return base.Channel.LogAsync(message, tag, method, file);
        }
    }
}
